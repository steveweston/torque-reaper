#!/usr/bin/env python
import os, sys
try:
    from prologue import main
    from config import Config
except ImportError:
    sys.exit(0)  # Pretend we were never executed

try:
    # Errors that occur while creating and initializing the Config
    # object are logged to a bootstrap logger which appends messages to
    # /tmp/prologue-boot.log.  The only log messages should be errors
    # during configuration, due to a bad ini file for example.
    ini = os.environ.get('ROGUE_CONFIG', '/etc/prologue.ini')
    bootstrap = os.environ.get('ROGUE_BOOTLOG', '/tmp/prologue-boot.log')
    config = Config(ini=ini, logfile=bootstrap)

    # Create a "syslog" logger now that we're configured
    if config.sysloghost is None:
        config.sysloghost = 'torqueserver'
    config.logname = 'prologue.parallel'
    logger = config.syslogger()

    try:
        # Now everything is logged to syslog
        logger.debug('prologue.parallel starting')
        status = main(logger, config, xjobids=[sys.argv[1]])
        if status != 0:
            logger.warning('main return status %d' % status)
        logger.debug('prologue.parallel finished')
    except Exception, e:
        logger.warning('caught exception: %s' % e)
finally:
    # Any exit value other than 0 causes the pbs_mom to execute
    # the prologue.parallel script repeatedly!  It's not clear
    # that it ever makes sense to return anything but 0.
    sys.exit(0)
